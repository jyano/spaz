        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 3638,
        _bytesDispatched: 871505,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1392325331467,
        parser: [Object],
        ondata: [Function],
        _httpMessage: [Circular] },
     app:
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: {},
        response: {},
        cache: {},
        settings: [Object],
        engines: [Object],
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        l: [Object],
        _usedRouter: true,
        r: [Function: router],
        p: [Function],
        g: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals:
      { [Function: locals]
        li: true,
        U:
         { __v: 6,
           _id: 52e985d39d6fd6c51f000005,
           p: 'a',
           pf:
            { things: 'family, games, poker, money, winning, outdoors',
              words: 'competitive, funny, father, husband, business owner',
              about: 'creative and competitive',
              want: 'i want people to know i am a good man',
              best: 'smart, good instincts, can read people, creative marketer' },
           u: 'a',
           buds: [ 'b', 'b', 'b', 'b', 'b', 'b' ],
           m: '52ed7f41eb973be50100000b' },
        u: 'a',
        I: 52e985d39d6fd6c51f000005 },
     end: [Function],
     r: [Function],
     s: [Function],
     d: [Function],
     j: [Function],
     l:
      { [Function: locals]
        li: true,
        U:
         { __v: 6,
           _id: 52e985d39d6fd6c51f000005,
           p: 'a',
           pf:
            { things: 'family, games, poker, money, winning, outdoors',
              words: 'competitive, funny, father, husband, business owner',
              about: 'creative and competitive',
              want: 'i want people to know i am a good man',
              best: 'smart, good instincts, can read people, creative marketer' },
           u: 'a',
           buds: [ 'b', 'b', 'b', 'b', 'b', 'b' ],
           m: '52ed7f41eb973be50100000b' },
        u: 'a',
        I: 52e985d39d6fd6c51f000005 } },
  next: [Function: next],
  _startTime: Thu Feb 13 2014 16:02:11 GMT-0500 (EST),
  body: {},
  files: {},
  secret: 'xyz',
  cookies: {},
  signedCookies: { 'connect.sid': 'Re3ExPjXPuiqtRpBI46Aprge' },
  sessionStore:
   { db:
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'brain',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        native_parser: undefined,
        bsonLib: [Object],
        bson: {},
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        auths: [],
        openCalled: true,
        commands: [],
        logger: [Object],
        slaveOk: false,
        tag: 1392325323319,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection:
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        readPreference: 'primary',
        pkFactory: [Object] } },
  sessionID: 'Re3ExPjXPuiqtRpBI46Aprge',
  session:
   { cookie:
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     u: 'a',
     li: true },
  flash: [Function: _flash],
  b: {},
  f: {},
  n: [Function: _flash],
  s:
   { cookie:
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     u: 'a',
     li: true },
  p: [Function],
  pm: undefined,
  li: true,
  _route_index: 17,
  route:
   { path: '/sts1',
     method: 'get',
     callbacks: [ [Function], [Function] ],
     keys: [],
     regexp: /^\/sts1\/?$/i,
     params: [] },
  params: [],
  U:
   { __v: 6,
     _id: 52e985d39d6fd6c51f000005,
     p: 'a',
     pf:
      { things: 'family, games, poker, money, winning, outdoors',
        words: 'competitive, funny, father, husband, business owner',
        about: 'creative and competitive',
        want: 'i want people to know i am a good man',
        best: 'smart, good instincts, can read people, creative marketer' },
     u: 'a',
     buds: [ 'b', 'b', 'b', 'b', 'b', 'b' ],
     m: '52ed7f41eb973be50100000b' },
  u: 'a',
  I: 52e985d39d6fd6c51f000005 }
undefined
GET /sts1?u=a 200 40ms
li
u
undefined
{ _readableState:
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: false,
     reading: false,
     calledRead: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null },
  readable: true,
  domain: null,
  _events: {},
  _maxListeners: 10,
  socket:
   { _connecting: false,
     _handle:
      { fd: 29,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState:
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Function: ondrain],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState:
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4057,
     _bytesDispatched: 871688,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 9,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:8080' },
     _idleTimeout: 120000,
     _idleNext:
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 3226,
        _bytesDispatched: 523637,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1392325330272,
        parser: [Object],
        ondata: [Function],
        _httpMessage: null },
     _idlePrev:
      { _idleNext: [Circular],
        _idlePrev: [Object],
        msecs: 120000,
        ontimeout: [Function: listOnTimeout] },
     _idleStart: 1392325390155,
     parser:
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _httpMessage:
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        end: [Function],
        r: [Function],
        s: [Function],
        d: [Function],
        j: [Function],
        l: [Object] } },
  connection:
   { _connecting: false,
     _handle:
      { fd: 29,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState:
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Function: ondrain],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState:
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4057,
     _bytesDispatched: 871688,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 9,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:8080' },
     _idleTimeout: 120000,
     _idleNext:
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 3226,
        _bytesDispatched: 523637,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1392325330272,
        parser: [Object],
        ondata: [Function],
        _httpMessage: null },
     _idlePrev:
      { _idleNext: [Circular],
        _idlePrev: [Object],
        msecs: 120000,
        ontimeout: [Function: listOnTimeout] },
     _idleStart: 1392325390155,
     parser:
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _httpMessage:
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        end: [Function],
        r: [Function],
        s: [Function],
        d: [Function],
        j: [Function],
        l: [Object] } },
  httpVersion: '1.1',
  complete: true,
  headers:
   { host: 'localhost:8080',
     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:26.0) Gecko/20100101 Firefox/26.0',
     accept: '*/*',
     'accept-language': 'en-US,en;q=0.5',
     'accept-encoding': 'gzip, deflate',
     'x-requested-with': 'XMLHttpRequest',
     referer: 'http://localhost:8080/wap/users',
     cookie: 'connect.sid=s%3ARe3ExPjXPuiqtRpBI46Aprge.D387J00bWO11Toi17OegOyNCUlyCcbQ3B0FY2ldc4HY',
     connection: 'keep-alive' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/sts1?u=happy',
  method: 'GET',
  statusCode: null,
  client:
   { _connecting: false,
     _handle:
      { fd: 29,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState:
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null },
     readable: true,
     domain: null,
     _events:
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Function: ondrain],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState:
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 4057,
     _bytesDispatched: 871688,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 9,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:8080' },
     _idleTimeout: 120000,
     _idleNext:
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 3226,
        _bytesDispatched: 523637,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1392325330272,
        parser: [Object],
        ondata: [Function],
        _httpMessage: null },
     _idlePrev:
      { _idleNext: [Circular],
        _idlePrev: [Object],
        msecs: 120000,
        ontimeout: [Function: listOnTimeout] },
     _idleStart: 1392325390155,
     parser:
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _httpMessage:
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        app: [Object],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Object],
        end: [Function],
        r: [Function],
        s: [Function],
        d: [Function],
        j: [Function],
        l: [Object] } },
  _consuming: false,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/sts1?u=happy',
  _parsedUrl:
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: '?u=happy',
     query: 'u=happy',
     pathname: '/sts1',
     path: '/sts1?u=happy',
     href: '/sts1?u=happy' },

  query: { u: 'happy' },


  app:
   { [Function: app]
     use: [Function],
     handle: [Function],
     listen: [Function],
     setMaxListeners: [Function],
     emit: [Function],
     addListener: [Function],
     on: [Function],
     once: [Function],
     removeListener: [Function],
     removeAllListeners: [Function],
     listeners: [Function],
     route: '/',
     stack:
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     init: [Function],
     defaultConfiguration: [Function],
     engine: [Function],
     param: [Function],
     set: [Function],
     path: [Function],
     enabled: [Function],
     disabled: [Function],
     enable: [Function],
     disable: [Function],
     configure: [Function],
     get: [Function],
     post: [Function],
     put: [Function],
     head: [Function],
     delete: [Function],
     options: [Function],
     trace: [Function],
     copy: [Function],
     lock: [Function],
     mkcol: [Function],
     move: [Function],
     propfind: [Function],
     proppatch: [Function],
     unlock: [Function],
     report: [Function],
     mkactivity: [Function],
     checkout: [Function],
     merge: [Function],
     'm-search': [Function],
     notify: [Function],
     subscribe: [Function],
     unsubscribe: [Function],
     patch: [Function],
     all: [Function],
     del: [Function],
     render: [Function],
     request: {},
     response: {},
     cache: {},
     settings:
      { 'x-powered-by': true,
        env: 'development',
        'subdomain offset': 2,
        view: [Function: View],
        views: '/Users/yano/wappy/w/../v/',
        'jsonp callback name': 'callback',
        'json spaces': 2,
        port: 4000,
        'view engine': 'jade' },
     engines: { '.jade': [Function] },
     _events: { mount: [Function] },
     _router:
      { map: [Object],
        params: {},
        _params: [],
        caseSensitive: false,
        strict: false,
        middleware: [Function: router] },
     routes: { get: [Object], post: [Object] },
     router: [Getter],
     locals: { [Function: locals] settings: [Object] },
     l: { [Function: locals] settings: [Object] },
     _usedRouter: true,
     r: [Function: router],
     p: [Function],
     g: [Function] },
  res:
   { domain: null,
     _events: { finish: [Function], header: [Function] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket:
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 4057,
        _bytesDispatched: 871688,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1392325390155,
        parser: [Object],
        ondata: [Function],
        _httpMessage: [Circular] },
     connection:
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 4057,
        _bytesDispatched: 871688,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1392325390155,
        parser: [Object],
        ondata: [Function],
        _httpMessage: [Circular] },
     app:
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: {},
        response: {},
        cache: {},
        settings: [Object],
        engines: [Object],
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        l: [Object],
        _usedRouter: true,
        r: [Function: router],
        p: [Function],
        g: [Function] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals:
      { [Function: locals]
        li: true,
        U:
         { __v: 6,
           _id: 52e985d39d6fd6c51f000005,
           p: 'a',
           pf:
            { things: 'family, games, poker, money, winning, outdoors',
              words: 'competitive, funny, father, husband, business owner',
              about: 'creative and competitive',
              want: 'i want people to know i am a good man',
              best: 'smart, good instincts, can read people, creative marketer' },
           u: 'a',
           buds: [ 'b', 'b', 'b', 'b', 'b', 'b' ],
           m: '52ed7f41eb973be50100000b' },
        u: 'a',
        I: 52e985d39d6fd6c51f000005 },
     end: [Function],
     r: [Function],
     s: [Function],
     d: [Function],
     j: [Function],
     l:
      { [Function: locals]
        li: true,
        U:
         { __v: 6,
           _id: 52e985d39d6fd6c51f000005,
           p: 'a',
           pf:
            { things: 'family, games, poker, money, winning, outdoors',
              words: 'competitive, funny, father, husband, business owner',
              about: 'creative and competitive',
              want: 'i want people to know i am a good man',
              best: 'smart, good instincts, can read people, creative marketer' },
           u: 'a',
           buds: [ 'b', 'b', 'b', 'b', 'b', 'b' ],
           m: '52ed7f41eb973be50100000b' },
        u: 'a',
        I: 52e985d39d6fd6c51f000005 } },
  next: [Function: next],
  _startTime: Thu Feb 13 2014 16:03:10 GMT-0500 (EST),
  body: {},
  files: {},
  secret: 'xyz',
  cookies: {},
  signedCookies: { 'connect.sid': 'Re3ExPjXPuiqtRpBI46Aprge' },
  sessionStore:
   { db:
      { domain: null,
        _events: {},
        _maxListeners: 10,
        databaseName: 'brain',
        serverConfig: [Object],
        options: [Object],
        _applicationClosed: false,
        native_parser: undefined,
        bsonLib: [Object],
        bson: {},
        bson_deserializer: [Object],
        bson_serializer: [Object],
        _state: 'connected',
        pkFactory: [Object],
        forceServerObjectId: false,
        safe: false,
        notReplied: {},
        isInitializing: true,
        auths: [],
        openCalled: true,
        commands: [],
        logger: [Object],
        slaveOk: false,
        tag: 1392325323319,
        eventHandlers: [Object],
        serializeFunctions: false,
        raw: false,
        recordQueryStats: false,
        retryMiliSeconds: 1000,
        numberOfRetries: 60,
        readPreference: undefined },
     db_collection_name: 'sessions',
     _serialize_session: [Function: stringify],
     _unserialize_session: [Function: parse],
     _get_collection: [Function],
     generate: [Function],
     _events: { disconnect: [Function], connect: [Function] },
     collection:
      { db: [Object],
        collectionName: 'sessions',
        internalHint: null,
        opts: {},
        slaveOk: false,
        serializeFunctions: false,
        raw: false,
        readPreference: 'primary',
        pkFactory: [Object] } },
  sessionID: 'Re3ExPjXPuiqtRpBI46Aprge',
  session:
   { cookie:
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     u: 'a',
     li: true },
  flash: [Function: _flash],
  b: {},
  f: {},
  n: [Function: _flash],
  s:
   { cookie:
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true },
     u: 'a',
     li: true },
  p: [Function],
  pm: undefined,
  li: true,
  _route_index: 17,
  route:
   { path: '/sts1',
     method: 'get',
     callbacks: [ [Function], [Function] ],
     keys: [],
     regexp: /^\/sts1\/?$/i,
     params: [] },
  params: [],
  U:
   { __v: 6,
     _id: 52e985d39d6fd6c51f000005,
     p: 'a',
     pf:
      { things: 'family, games, poker, money, winning, outdoors',
        words: 'competitive, funny, father, husband, business owner',
        about: 'creative and competitive',
        want: 'i want people to know i am a good man',
        best: 'smart, good instincts, can read people, creative marketer' },
     u: 'a',
     buds: [ 'b', 'b', 'b', 'b', 'b', 'b' ],
     m: '52ed7f41eb973be50100000b' },
  u: 'a',
  I: 52e985d39d6fd6c51f000005 }
undefined
